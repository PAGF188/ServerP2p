/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package p2pClient;

import p2pServer.Cliente;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.HashMap;

/**
 *
 * @author pablo
 */
public class Vin extends javax.swing.JFrame {

    /*Necesito tener un arrayList que relacioe tablas con usuarios ¿Un hashMap?*/
    private HashMap<String,JTable> usuario_tabla;

    /*Usuario activo con el que estoy hablando*/
    private String usuario;

    public Vin() {
        initComponents();

        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.usuario_tabla = new HashMap<>();
        this.usuario=null;
    }

    public HashMap<String, JTable> getUsuario_tabla() {
        return usuario_tabla;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        scroll = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        send = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(23, 138, 28));

        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(254, 254, 254));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Amigos");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel1)
                                .addContainerGap(419, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(send, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );


        /*Send*/
        send.setFont(new java.awt.Font("Cantarell", 0, 21)); // NOI18N
        send.setText("Escribe tu mensaje aquí");
        send.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sendFocusLost(evt);
            }
        });
        send.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendMouseClicked(evt);
            }
        });
        send.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sendKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sendKeyPressed(evt);
            }
        });


        pack();
    }// </editor-fold>

    /**/
    private void sendKeyPressed(java.awt.event.KeyEvent evt) {
        // enviar pulsando en "enter"
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            this.enviar();
        }
    }

    private void sendMouseClicked(java.awt.event.MouseEvent evt) {
        // Al cliclar el la textBox de entrada, se elimina el mensaje informativo
        if(send.getText().equals("Escribe tu mensaje aquí"))
            send.setText(null);
    }

    private void sendFocusLost(java.awt.event.FocusEvent evt) {
        // El perder el focus (clicar en otro elemento), se reinicia el mensaje informativo
        if(send.getText().equals("")){
            send.setText("Escribe tu mensaje aquí");
        }
    }

    private void sendKeyTyped(java.awt.event.KeyEvent evt) {
        /* Como el tamaño límite de los mensajes es 27 bytes,
        cada vez que se introduce un nuevo caracter se comprueba si no rebasa el límite.
        En caso afirmativo se rechazaría*/
        if(send.getText().getBytes().length == 27){
            evt.consume();
        }
    }

    private void enviar(){
        /*Enviar*/
        for(Cliente clAux : P2pClient.amigos){
            if(clAux.getNombre().equals(usuario)){
                try{
                    clAux.getInterfazRemota().mensaje(send.getText(), P2pClient.yoNombre);
                }catch(Exception e){
                    System.out.println("Error al enviar mensaje de " + P2pClient.yoNombre + " a " + clAux.getNombre());
                    System.out.println("Interfaz remota: " + clAux.getInterfazRemota());
                    e.printStackTrace();
                }
            }
        }
    }
    /*Depurar está función. No funciona bien cuando entra Pablo*/
    /*Nota para eliminar el boton habrá que recorrer jPanel2 y eliminar el que tenga como texto un nombre ocncreto*/
    public void actualizarAmigos(){
        int incremento=0;
        for(Cliente amigo: P2pClient.amigos){
            /*Si el amigo no está añadido ya a la interfaz, lo añadimos en forma botón y creamos su tabla*/
            if(!this.contiene(jPanel2,amigo)){
                JButton aux = new JButton();
                aux.setText(amigo.getNombre());
                aux.setSize(140,38);
                aux.setLocation(41,70+incremento);
                aux.setBackground(new java.awt.Color(71, 103, 176));
                aux.setFont(new java.awt.Font("Cantarell", 1, 24));
                aux.setForeground(new java.awt.Color(254, 254, 254));

                /*creamos el controlador para el boton*/
                aux.addActionListener(new ActionListener() {

                    public void actionPerformed(ActionEvent e) {
                        /*si no existe su tabla:*/
                        if(!usuario_tabla.containsKey(aux.getText())){
                            JTable tabla = new JTable();
                            tabla.setModel(new ModeloTabla());
                            usuario_tabla.put(aux.getText(),tabla);
                            scroll.setViewportView(tabla);
                        }
                        /*si ya existe*/
                        else{
                            scroll.setViewportView(usuario_tabla.get(aux.getText()));
                        }
                        usuario = aux.getText();
                    }
                });
                /*añadimos el botón*/
                jPanel2.add(aux);
                /*creamos la tabla*/
                JTable tabla = new JTable();
                tabla.setModel(new ModeloTabla());
                usuario_tabla.put(aux.getText(),tabla);
                this.repaint();
                incremento+=70;
            }

        }
        /*Debug*/
        System.out.println("Componentes jpanel4: " + jPanel4.getComponents().length);
    }

    public boolean contiene(JPanel jp,Cliente cl){
        for(Component cp: jp.getComponents()){
            if(cp instanceof JButton && ((JButton) cp).getText().equals(cl.getNombre())){
                return(true);
            }
        }
        return(false);
    }

    // Variables declaration - do not modify
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField send;
    // End of variables declaration
}
